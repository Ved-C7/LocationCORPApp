@{
	@model LocationCORPApp.ViewModel.EmployeeLocationVM
	ViewData["Title"] = "Employee Location Allocation";
	var locationNames = ViewData["LocationNames"] as List<SelectListItem>;
	//var locationNames = Model.LocationNames; 
	//var buildingNames = ViewData["BuildingNames"] as List<SelectListItem>;
	var pickedLoc = ViewData["PickedLocationName"];
	var pickedBuild = ViewData["PickedBuildingName"];
	var pickedLevel = ViewData["PickedFloorLevel"];
	var pickedNum = ViewData["PickedOfficeCubicleNumber"];
	ViewData["empLoc"] = 0;
	ViewData["empBuild"] = 0;
	ViewData["empLevel"] = 0;
	ViewData["empNum"] = "0";
	var currentLoc = ViewData["CurrentLoc"];
	var currentBu = ViewData["CurrentBu"];
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js" integrity="sha512-2ImtlRlf2VVmiGZsjm9bEyhjGW4dU7B6TNwh/hx/iSByxNENtj3WVE6o/9Lj4TJeVXPi4bnOIMXFIJJAeufa0A==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" integrity="sha512-nMNlpuaDPrqlEls3IX/Q56H36qvBASwb3ipuo3MxeWbsQB1881ox0cRv7UPTgBlriqoynt35KjEwgGUeUXIPnw==" crossorigin="anonymous" referrerpolicy="no-referrer" />

<script type="text/javascript">
	$(document).ready(function() {
		

		{
			
            $('#LocationName').select2({
            });
            $('#BuildingName').select2({
            });
            $('#FloorLevel').select2({
            });
            $('#OfficeCubicleNumber').select2({
            });
		}
		//Dropdownlist Selectedchange event
		$("#LocationName").change(function() {
			$("#BuildingName").empty();
            $("#FloorLevel").empty();
            $("#OfficeCubicleNumber").empty();
			$.ajax({
				type: 'POST',
				url: '@Url.Action("GetLocationName", "EmpLocationAllocation")', // we are calling json method

				dataType: 'json',

				data: { id: $("#LocationName").val() },
				// here we are get value of selected locationname and passing same value  as input to json method GetBuildingName.

				success: function(buildingNames) {
					// buildingNames contains the JSON formatted list
					// of states passed from the controller
                    $("#BuildingName").append('<option value="' + 0 + '">Select a Building</option>');

					$.each(buildingNames, function(i, buildingName) {
						$("#BuildingName").append('<option value="' + buildingName.value + '">' +
							buildingName.text + '</option>');
						// here we are adding option for buildingNames

					});
				},
				error: function(ex) {
					alert('Failed to retrieve buildingNames.' + ex);
				}
			});
			return false;
		})

		$("#BuildingName").change(function () {  
            $("#FloorLevel").empty();
			$("#OfficeCubicleNumber").empty(); 
            $.ajax({  
                type: 'POST',  
                url: '@Url.Action("GetFloorLevels", "EmpLocationAllocation")', // we are calling json method  
   
                dataType: 'json',  
   
                data: { id: $("#BuildingName").val() },   
               // here we are get value of selected country and passing same value  
                  //as inputto json method .  
   
                success: function (floorLevels) {  
                    // states contains the JSON formatted list  
                    // of states passed from the controller  
					
                    $("#FloorLevel").append('<option value="' + 0 + '">Select a Floor</option>');
                    $.each(floorLevels, function (i, floorLevel) {  
                    $("#FloorLevel").append('<option value="' + floorLevel.value + '">' +    
                         floorLevel.text + '</option>');                                                                                                  
                    // here we are adding option for States  
   
                    });  
                },  
                error: function (ex) {  
                    alert('Failed to retrieve floorLevels.' + ex);  
                }  
			});  
            return false;  
		})

	   $("#FloorLevel").change(function () {  
           $("#OfficeCubicleNumber").empty();  
           $.ajax({  
               type: 'POST',  
               url: '@Url.Action("GetOfficeNumbers", "EmpLocationAllocation")', // we are calling json method  
   
               dataType: 'json',  
   
               data: { id: $("#FloorLevel").val() },   
               // here we are get value of selected country and passing same value  
                  //as inputto json method .  
   
               success: function (officeNumbers) {  
                    // states contains the JSON formatted list  
                    // of states passed from the controller  
                   $("#OfficeCubicleNumber").append('<option value="' + 0 + '">Select an Office/Cubicle</option>');
                   $.each(officeNumbers, function (i, officeNumber) {  
                   $("#OfficeCubicleNumber").append('<option value="' + officeNumber.value + '">' +    
                        officeNumber.text + '</option>');                                                                                                  
                    // here we are adding option for States  
   
                   });  
               },  
               error: function (ex) {  
                   alert('Failed to retrieve officeNumbers.' + ex);  
               }  
           });  
           return false;  
       })

	});
	$(document).on('select2:open', () => {
    document.querySelector('.select2-search__field').focus();
	});
</script>

@using (Html.BeginForm("Submit", "EmpLocationAllocation", FormMethod.Post)) {
	<table>
		<tr>
			<td>Location</td>
			<td>@Html.DropDownList("LocationName", locationNames, "Select a Location")
				<br />
			@Html.ValidationMessageFor(model => model.LocationName, "", new {@class = "text-danger"})
		</tr>
		<tr>
			<td>Building</td>
			<td>@Html.DropDownList("BuildingName", new SelectList(string.Empty, "Value", "Text"), "Select a Building", new { style = "width:250px" })</td>
		</tr>	
		<tr>
			<td>Floor</td>
			<td>@Html.DropDownList("FloorLevel", new SelectList(string.Empty, "Value", "Text"), "Select a Floor", new { style = "width:250px" })</td>
		</tr>
		<tr>
			<td>Office/Cubicle Number</td>
			<td>@Html.DropDownList("OfficeCubicleNumber", new SelectList(string.Empty, "Value", "Text"), "Select an Office/Cubicle", new { style = "width:250px" })</td
		</tr>
		<tr>
			<td colspan="2">
			</td>
		</tr>
		</table>
		<script>
		$(document).ready(function() {
   
		$('#LocationName').val(@currentLoc.ToString());
   
		});
</script>
		<table>
		<tr>
			<td>Picked Location - </td>
			<td>
				@{ViewData["empLoc"] = 0;
					@if (Convert.ToInt64(pickedLoc) != 0) {
						<span> @pickedLoc.ToString() </span>
					ViewData["empLoc"] = Convert.ToInt64(pickedLoc);
				}}

			</td>
		</tr>
		<tr>
			<td>Picked Building - </td>
			<td>
				@{ViewData["empBuild"] = 0;
						@if (Convert.ToInt64(pickedBuild) != 0) {
							<span> @pickedBuild.ToString() </span>
					ViewData["empBuild"] = Convert.ToInt64(pickedBuild);
				}}
			</td>
		</tr>
		<tr>
			<td>Picked Floor Level - </td>
			<td>
				@{ViewData["empLevel"] = 0;
							@if (Convert.ToInt64(pickedLevel) != 0) {
								<span> @pickedLevel.ToString() </span>
					ViewData["empLevel"] = Convert.ToInt64(pickedLevel);
				}}
			</td>
		</tr>
		<tr>
			<td>Picked Cubical/Office - </td>
			<td>
				@{ViewData["empNum"] = 0;
								@if (pickedNum != "0") {
									<span> @pickedNum </span>
					ViewData["empNum"] = pickedNum;
				}}
			</td>
		</tr>
	</table>

	
	<br />
	<button type="submit" class="btn btn-primary">Submit</button>

	}
